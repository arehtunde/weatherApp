{"version":3,"sources":["weather.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","button","document","querySelector","render","style","display","getCoord","_ref","regeneratorRuntime","mark","_callee","main","foot","errorInfo","inputfield","input","encodedInput","coordUrl","fetchCoord","response","data","coord","wrap","_context","prev","next","createElement","append","after","trim","encodeURI","concat","fetch","sent","json","results","geometry","innerHTML","t0","stop","addEventListener"],"mappings":"AAAA,aAEA,SAASA,mBAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GAAO,IAAM,IAAIC,EAAOP,EAAIK,GAAKC,GAAUE,EAAQD,EAAKC,MAAS,MAAOC,GAAwB,YAAfP,EAAOO,GAAsBF,EAAKG,KAAQT,EAAQO,GAAiBG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAE7P,SAASS,kBAAkBC,GAAM,OAAO,WAAc,IAAIC,EAAOC,KAAMC,EAAOC,UAAW,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GAAU,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAAO,SAASd,EAAMK,GAAST,mBAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAAU,SAASJ,EAAOgB,GAAOrB,mBAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAAQjB,OAAMkB,OAJjX,IAAMC,OAASC,SAASC,cAAc,QAEhCC,OAAS,WAEGF,SAASC,cAAc,YAG/BE,MAAMC,QAAU,QAGpBC,SAAQ,WAAA,IAAAC,EAAAhB,kBAAAiB,mBAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAb,mBAAAc,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACTd,EAAOV,SAASC,cAAc,SAC9BU,EAAOX,SAASC,cAAc,SAC9BW,EAAYZ,SAASyB,cAAc,OACzCf,EAAKgB,OAAOd,GACZA,EAAUe,MAAMhB,GAChBT,SAEMW,EAAab,SAASC,cAAc,iBACpCa,EAAQD,EAAW5B,MAAM2C,OACzBb,EAAec,UAAUf,GACd,gDACA,mCACE,mBACbE,EAdS,GAAAc,OAWE,gDAXF,MAAAA,OAckBf,EAdlB,SAAAe,OAYE,mCAZF,KAAAA,OAaI,oBAbJR,EAAAC,KAAA,GAiBPN,EAAac,MAAMf,GAjBZM,EAAAE,KAAA,GAkBUP,EAlBV,KAAA,GAAA,OAkBPC,EAlBOI,EAAAU,KAAAV,EAAAE,KAAA,GAmBMN,EAASe,OAnBf,KAAA,GAmBPd,EAnBOG,EAAAU,KAqBPZ,EAAQD,EAAKe,QAAQ,GAAGC,SAC9BvB,EAAUwB,UAAV,MAAAN,OAA4BV,EAA5B,QAtBaE,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,MAAA,IAwBbV,EAAUwB,UAAV,OAAAN,OAA6BhB,EAA7B,+DAxBa,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAAgB,UAAA7B,EAAA,KAAA,CAAA,CAAA,GAAA,UAAH,OAAA,WAAA,OAAAH,EAAAV,MAAAH,KAAAE,YAAA,GA6BdI,OAAOwC,iBAAiB,QAASlC","file":"weather.js","sourcesContent":["const button = document.querySelector('.btn');\n\nconst render = () => {\n  // const search = document.querySelector('.search');\n  const feature = document.querySelector('.feature');\n\n  // search.style.display = 'none';\n  feature.style.display = 'none';\n};\n\nconst getCoord = async () => {\n  const main = document.querySelector('.main');\n  const foot = document.querySelector('.foot');\n  const errorInfo = document.createElement('div');\n  main.append(errorInfo);\n  errorInfo.after(foot);\n  render();\n\n  const inputfield = document.querySelector('.search_input');\n  const input = inputfield.value.trim();\n  const encodedInput = encodeURI(input);\n  const coordApi = 'https://api.opencagedata.com/geocode/v1/json?';\n  const coordKey = '173f9f1a42c64005be22065050aa936e';\n  const coordParam = 'pretty=1&limit=1';\n  const coordUrl = `${coordApi}q=${encodedInput}&key=${coordKey}&${coordParam}`;\n\n  try {\n    const fetchCoord = fetch(coordUrl);\n    const response = await fetchCoord;\n    const data = await response.json();\n\n    const coord = data.results[0].geometry;\n    errorInfo.innerHTML = `<p>${coord}</p>`;\n  } catch (error) {\n    errorInfo.innerHTML = `<h2>${input} Not Found!</h2>\n    <p>Please Enter a valid city name</p>`;\n  }\n};\n\nbutton.addEventListener('click', getCoord);\n"]}