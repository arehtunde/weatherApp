{"version":3,"sources":["result.js"],"names":["Object","defineProperty","exports","value","setDaily","setHourly","setCurrentWeather","setCurrentTemp","render","main","document","querySelector","wrapper","createElement","classList","add","append","setHeader","headerTitle","remove","innerHTML","search","searchInput","button2","currentData","location","currentTemp","showDate","Date","observation_time","toLocaleDateString","weekday","year","month","day","concat","county","state","temp","weather_code","current","feels_like","dewpoint","humidity","baro_pressure","visibility","wind_speed","cloud_cover","precipitation","moon_phase","setAir","air","hourlyData","hourly","showTime","hourlyTime","toLocaleTimeString","hour","minute","precipitation_probability","dailyData","daily","dailyDate","label","feature"],"mappings":"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","file":"result.js","sourcesContent":["// create and append wrapper to main\nconst main = document.querySelector('.main');\nconst wrapper = document.createElement('div');\nwrapper.classList.add('wrapper');\nmain.append(wrapper);\n\nconst setHeader = () => {\n  const header = document.querySelector('.header');\n  header.classList.add('header2');\n\n  // set title\n  const headerTitle = document.querySelector('.header_title');\n  headerTitle.classList.remove('header_title');\n  headerTitle.classList.add('page_title');\n  headerTitle.innerHTML = `\n  <a href=\"index.html\" class=\"header_link\">WF</a>`;\n\n  // set search container\n  const search = document.querySelector('.search');\n  search.classList.remove('search');\n  search.classList.add('query');\n\n  // set input box\n  const searchInput = document.querySelector('.search_input');\n  searchInput.classList.remove('search_input');\n  searchInput.classList.add('query_input');\n\n  // modifying button\n  const button2 = document.createElement('button');\n  search.append(button2);\n  button2.classList.add('btn2');\n  button2.innerHTML = `\n  <i class=\"fas fa-search-location\"></i>`;\n};\n\nconst setCurrentTemp = (currentData, location) => {\n  // create card for current temp\n  const currentTemp = document.createElement('div');\n  currentTemp.classList.add('currenttemp');\n  wrapper.append(currentTemp);\n\n  // set date\n  const date = new Date(currentData.observation_time.value);\n  const options = {\n    weekday: 'short',\n    year: '2-digit',\n    month: 'short',\n    day: '2-digit',\n  };\n  const showDate = date.toLocaleDateString([], options);\n\n  // set content\n  currentTemp.innerHTML = `\n    <div class=\"currenttemp_detail\">\n      <p class=\"date\">${showDate}</p>\n      <p class=\"location\"><i class=\"fas fa-map-marker-alt\"></i><span class=\"value\">${location.county}, ${location.state}</span></p>\n      <p class=\"temp\"><span class=\"temp_value\">${currentData.temp.value}</span><sup class=\"temp_unit\">°C</sup></p>\n    </div>\n    <div class=\"currenttemp_description\">\n      <p class=\"descp\">${currentData.weather_code.value}</p>\n      <p class=\"icon\">weather icon</p>\n    </div>\n  `;\n};\n\nconst setCurrentWeather = (currentData, location) => {\n  // create card for current weather\n  const current = document.createElement('div');\n  current.classList.add('currentweather');\n  wrapper.append(current);\n  current.innerHTML = `\n    <div class=\"currentweather_detail\">\n      <h3 class=\"title\">Current Weather in ${location.state}</h3>\n      <p class=\"feel\"><span class=\"feel_value\">${currentData.feels_like.value}</span><sup class=\"feel_unit\">°C</sup></p>\n      <span class=\"feel_text\">Feels like</span>\n    </div>\n    <div class=\"currentweather_data\">\n      <ul class=\"currentdata\">\n        <li class=\"currentdata_list\"><i class=\"fas fa-tint\"></i><span class=\"prop\">Dew Point</span><span class=\"value\">${currentData.dewpoint.value}</span><span>°C</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-tint\"></i><span class=\"prop\">Humidity</span><span class=\"value\">${currentData.humidity.value}%</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-compress-arrows-alt\"></i><span class=\"prop\">Pressure</span><span class=\"value\">${currentData.baro_pressure.value}</span><span>hPa</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-eye\"></i><span class=\"prop\">Visibility</span><span class=\"value\">${currentData.visibility.value}</span><span>km</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-wind\"></i><span class=\"prop\">Wind</span><span class=\"value\">${currentData.wind_speed.value}</span><span>m/s</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-cloud\"></i><span class=\"prop\">Cloud Cover</span><span class=\"value\">${currentData.cloud_cover.value}%</span></li>\n        <li class=\"currentdata_list\"><span class=\"icon\">het</span><span class=\"prop\">Precipitation</span><span class=\"value\">${currentData.precipitation.value}</span><span>mm/hr</span></li>\n        <li class=\"currentdata_list\"><i class=\"fas fa-moon\"></i><span class=\"prop\">Moon Phase</span><span class=\"value\">${currentData.moon_phase.value}</span></li>\n      </ul>\n    </div>\n  `;\n};\n\nconst setAir = () => {\n  // create card for air quality\n  const air = document.createElement('div');\n  air.classList.add('air');\n  wrapper.append(air);\n  air.innerHTML = `\n    <h3 class=\"air_title\">Air Quality Index</h3>\n    <div class=\"air_detail\">\n      <div class=\"airvalue\">34</div>\n      <div class=\"airtext\">\n        <h4 class=\"airtext_verdict\">Good</h4>\n        <p class=\"airtext_expand\">Air quality is considered satiisfactory and air pollution poses little or no risk</p>\n      </div>\n    </div>\n    <button>See Details</button>\n  `;\n};\n\nconst setHourly = (hourlyData) => {\n  // create card for hourly weather\n  const hourly = document.createElement('div');\n  hourly.classList.add('hourly');\n  wrapper.append(hourly);\n\n  // set time\n  const showTime = (hourlyTime) => {\n    const time = new Date(hourlyTime);\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    return time.toLocaleTimeString([], options);\n  };\n\n  // set content\n  hourly.innerHTML = `\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[0].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[0].temp.value}</span>\n      <span class=\"icon\">icon</span>\n      <span class=\"time\">${hourlyData[0].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[1].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[1].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[1].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[2].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[2].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[2].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[3].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[3].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[3].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[4].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[4].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[4].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[5].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[5].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[5].precipitation_probability.value}</span>\n    </div>\n    <div class=\"hourly_data\">\n      <span class=\"time\">${showTime(hourlyData[6].observation_time.value)}</span>\n      <span class=\"temp\">${hourlyData[6].temp.value}</span>\n      <span class=\"icon\">100</span>\n      <span class=\"time\">${hourlyData[6].precipitation_probability.value}</span>\n    </div>\n    <button>See More</button>\n  `;\n};\n\nconst setDaily = (dailyData) => {\n  // create card for daily weather\n  const daily = document.createElement('div');\n  daily.classList.add('daily');\n  wrapper.append(daily);\n\n  // set date\n  const showDate = (dailyDate) => {\n    const date = new Date(dailyDate);\n    const options = {\n      weekday: 'short',\n      day: '2-digit',\n    };\n    return date.toLocaleDateString([], options);\n  };\n\n  // set content\n  daily.innerHTML = `\n  <div class=\"daily_data\">\n    <span class=\"day\">${showDate(dailyData[0].observation_time.value)}</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">${showDate(dailyData[1].observation_time.value)}</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">${showDate(dailyData[2].observation_time.value)}</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">${showDate(dailyData[3].observation_time.value)}</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">Today</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">Today</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <div class=\"daily_data\">\n    <span class=\"day\">Today</span>\n    <span class=\"icon\">100</span>\n    <span class=\"temp\">10°C</span>\n    <span class=\"time\">100</span>\n  </div>\n  <button>See More</button>\n`;\n};\n\nconst render = () => {\n  const label = document.querySelector('.search_label');\n  const feature = document.querySelector('.feature');\n  const button = document.querySelector('.btn');\n  button.remove();\n  feature.remove();\n  label.remove();\n  setHeader();\n  setAir();\n  setDaily();\n};\n\nexport {\n  render, setCurrentTemp, setCurrentWeather, setHourly, setDaily,\n};\n"]}